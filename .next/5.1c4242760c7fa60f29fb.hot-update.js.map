{"version":3,"file":"5.1c4242760c7fa60f29fb.hot-update.js","sources":["webpack:///components/PodcastPlayer.js","webpack:///pages/channel.js"],"sourcesContent":["export default class PodcastPlayer extends React.Component {\r\n\t\r\n\trender(){\r\n\t\tconst { clip, onClose } = this.props\r\n\t\treturn(\r\n\t\t\t<div className='clip'>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonClose ? \r\n\t\t\t\t\t\t<a onClick={onClose}>&lt; Volver</a>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Link href={`/channel?id=${clip.channel.id}`}>\r\n\t\t\t\t\t\t\t<a className=\"close\">&lt; Volver</a>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t}\r\n\t\t\t\t</nav>\r\n\r\n\t\t\t\t<picture>\r\n\t\t\t\t\t<div style={{ backgroundImage: `url(${audio_clip.urls.image || audio_clip.channel.urls.logo_image.original})` }} />\r\n\t\t\t\t</picture>\r\n\r\n\t\t\t\t<div className='player'>\r\n\t\t\t\t\t<h3>{ audio_clip.title }</h3>\r\n\t\t\t\t\t<h6>{ audio_clip.channel.title }</h6>\r\n\t\t\t\t\t<audio controls autoPlay={true}>\r\n\t\t\t\t\t\t<source src={audio_clip.urls.high_mp3} type='audio/mpeg' />\r\n\t\t\t\t\t</audio>\r\n\t\t\t\t</div>\r\n\t\t\t\t<style jsx>{`\r\n\t\t\t        nav {\r\n\t\t\t          background: none;\r\n\t\t\t        }\r\n\t\t\t        nav a {\r\n\t\t\t          display: inline-block;\r\n\t\t\t          padding: 15px;\r\n\t\t\t          color: white;\r\n\t\t\t          cursor: pointer;\r\n\t\t\t          text-decoration: none;\r\n\t\t\t        }\r\n\t\t\t        .clip {\r\n\t\t\t          display: flex;\r\n\t\t\t          height: 100%;\r\n\t\t\t          flex-direction: column;\r\n\t\t\t          background: #8756ca;\r\n\t\t\t          color: white;\r\n\t\t\t        }\r\n\t\t\t        picture {\r\n\t\t\t          display: flex;\r\n\t\t\t          align-items: center;\r\n\t\t\t          justify-content: center;\r\n\t\t\t          flex: 1 1;\r\n\t\t\t          flex-direction: column;\r\n\t\t\t          width: auto;\r\n\t\t\t          padding: 2%;\r\n\t\t\t        }\r\n\t\t\t        picture div {\r\n\t\t\t          width: 100%;\r\n\t\t\t          height: 100%;\r\n\t\t\t          background-position: 50% 50%;\r\n\t\t\t          background-size: contain;\r\n\t\t\t          background-repeat: no-repeat;\r\n\t\t\t        }\r\n\t\t\t        .player {\r\n\t\t\t          padding: 30px;\r\n\t\t\t          background: rgba(0,0,0,0.3);\r\n\t\t\t          text-align: center;\r\n\t\t\t        }\r\n\t\t\t        h3 {\r\n\t\t\t          margin: 0;\r\n\t\t\t        }\r\n\t\t\t        h6 {\r\n\t\t\t          margin: 0;\r\n\t\t\t          margin-top: 1em;\r\n\t\t\t        }\r\n\t\t\t        audio {\r\n\t\t\t          margin-top: 2em;\r\n\t\t\t          width: 100%;\r\n\t\t\t        }\r\n\t\t\t\t\t@media screen and (max-width: 768px) {\r\n\t\t\t\t\t\tpicture {\r\n\t\t\t\t          padding: 8%;\r\n\t\t\t\t        }\r\n\t\t\t\t\t}\r\n\t\t\t            \r\n\t\t\t    `}</style>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// components/PodcastPlayer.js","import 'isomorphic-fetch'\r\nimport Error from './_error'\r\nimport Link from 'next/link'\r\nimport Layout from '../components/Layout'\r\nimport ChannelGrid from '../components/ChannelGrid'\r\nimport Banner from '../components/Banner'\r\n// import PodcastGrid from '../components/PodcastGrid'\r\nimport PodcastGridClick from '../components/PodcastGridClick'\r\nimport Col from '../components/Col'\r\nimport Row from '../components/Row'\r\nimport PodcastPlayer from '../components/PodcastPlayer'\r\n\r\nexport default class extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topenPodcast: null\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getInitialProps ({ query, res }) {\r\n\t\tlet idChannel = query.id\r\n\t\ttry {\r\n\t\t\tlet [ reqChannel, reqAudio, reqChidlChannels ] = await Promise.all([\r\n\t\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n\t\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n\t\t\t\tfetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n\t\t\t])\r\n\r\n\t\t\tif (reqChannel.status >= 400) {\r\n\t\t\t\tres.statusCode = reqChannel.status\r\n\t\t\t\treturn { channel, audio_clips, channels, statusCode: reqChannel.status }\r\n\t\t\t}\r\n\r\n\t\t\tlet { body: { channel } } = await reqChannel.json()\r\n\t\t\tlet { body: { audio_clips } } = await reqAudio.json()\r\n\t\t\tlet { body: {channels } } = await reqChidlChannels.json()\r\n\r\n\t\t\treturn { channel, audio_clips, channels, statusCode: 200 }\r\n\r\n\t\t} catch(err) {\r\n\r\n\t\t\tres.statusCode = 503\r\n            return { channel:null , audio_clips: null, channels: null, statusCode: 503 }\r\n\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\topenPodcast = (e, podcast) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\topenPodcast: podcast\r\n\t\t})\r\n\t}\r\n\tclosePodcast = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.setState({\r\n\t\t\topenPodcast: null\r\n\t\t})\r\n\t}\r\n\trender () {\r\n\t\tconst { channel, audio_clips, channels, statusCode } = this.props\r\n\t\tconst { openPodcast } = this.state\r\n\r\n\t\tif (statusCode !== 200) {\r\n            return <Error statusCode={statusCode} />\r\n        }\r\n\r\n\t\treturn(\r\n\t\t\t<Layout title={`${channel.title} - Platzi Cast`}>\r\n\r\n\t\t\t\t<Banner url={channel.urls.banner_image.original} title={channel.title} />\r\n\r\n\t\t\t\t{ openPodcast && \r\n\t\t\t\t\t<div className=\"modal\">\r\n\t\t\t\t\t\t<PodcastPlayer clip={openPodcast} onClose={ this.closePodcast } />\r\n\t\t\t\t\t</div> \r\n\t\t\t\t}\r\n\r\n\t\t\t\t<Row cls=\"row\" >\r\n\t\t\t\t\t<Col cls=\"col-8 col-sm-12 \">\r\n\t\t\t\t\t\t<h2>Series</h2>\r\n\t\t\t\t\t\t{ channels.length > 0 && \r\n\t\t\t\t\t\t\t<ChannelGrid channels={channels} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col cls=\"col-4 col-sm-12 \">\r\n\t\t\t\t\t\t<h2>Ultimos Podcasts</h2>\r\n\t\t\t\t\t\t<PodcastGridClick audio_clips={audio_clips} onClickPodcast={this.openPodcast} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<style jsx>{`\r\n\t\t\t\t\th2 {\r\n\t\t\t\t\t\tpadding: 15px;\r\n\t\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\tfont-size: 23px;\r\n\t\t\t\t\t\tcolor: #313131;\r\n                    }\r\n\r\n\t\t\t        .modal {\r\n\t\t\t\t\t\tposition: fixed;\r\n\t\t\t\t\t\ttop: 0;\r\n\t\t\t\t\t\tleft: 0;\r\n\t\t\t\t\t\tright: 0;\r\n\t\t\t\t\t\tbottom: 0;\r\n\t\t\t\t\t\tz-index: 99999;\r\n\t\t\t        }\r\n                    @media screen and (max-width: 768px) {\r\n\t\t\t\t\t\th2 {\r\n\t\t\t\t\t\t\ttext-align:center;\r\n\t\t\t\t\t\t\tmargin-bottom: 15px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t`}</style>\r\n\t\t\t</Layout>\r\n\t\t)\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/channel.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AAmFA;;;;AAxFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAqCA;AACA;AAAA;AACA;AADA;AAGA;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA;AAAA;AACA;AADA;AAGA;AA/CA;AAEA;AACA;AADA;AAFA;AAKA;AACA;;;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAiDA;;;;;;;;;;;;;AAnGA;AACA;;;AAEA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;;AADA;;AACA;AACA;;;AADA;;AACA;AACA;;;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAjCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}